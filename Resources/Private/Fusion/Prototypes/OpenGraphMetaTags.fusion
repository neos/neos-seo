prototype(Neos.Seo:OpenGraphMetaTags) < prototype(Neos.Fusion:Array) {
    @context.openGraphType = ${q(node).property('openGraphType')}
    @if.isEnabled = ${!String.isBlank(openGraphType)}

    openGraphTypeTag = Neos.Fusion:Tag {
        tagName = 'meta'
        attributes {
            property = 'og:type'
            content = ${openGraphType}
        }
    }

    openGraphTitleTag = Neos.Fusion:Tag {
        tagName = 'meta'
        @context.openGraphTitle = ${q(node).property('openGraphTitle')}
        attributes {
            property = 'og:title'
            content = ${openGraphTitle}
        }
        @if.isNotBlank = ${!String.isBlank(openGraphTitle)}
    }

    openGraphDescriptionTag = Neos.Fusion:Tag {
        tagName = 'meta'
        @context.openGraphDescription = ${q(node).property('openGraphDescription') ? q(node).property('openGraphDescription') : q(node).property('metaDescription')}
        attributes {
            property = 'og:description'
            content = ${openGraphDescription}
        }
        @if.isNotBlank = ${!String.isBlank(openGraphDescription)}
    }

    openGraphImageTag = Neos.Fusion:Tag {
        tagName = 'meta'
        @context.openGraphImage = ${q(node).property('openGraphImage')}
        attributes {
            property = 'og:image'
            content = Neos.Neos:ImageUri {
                asset = ${openGraphImage}
                maximumWidth = 2000
                maximumHeight = 2000
            }
        }
        @if.isImageSet = ${openGraphImage != null && openGraphImage != ''}
    }

    openGraphUrlTag = Neos.Fusion:Tag {
        tagName = 'meta'
        attributes {
            property = 'og:url'
            content = Neos.Neos:NodeUri {
                node = ${node}
                absolute = TRUE
            }
        }
    }
}
